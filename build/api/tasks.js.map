{"version":3,"sources":["../../source/api/tasks.js"],"names":[],"mappings":";;;;;;;;;;;;yBAAuB,aAAa;;;;oBACnB,QAAQ;;;;AAElB,IAAM,KAAK,GAAG,SACjB,MAAM,CAAC,MAAM,mBAAM,EACnB;AACI,YAAQ,EAAE,QAAQ;;;;;;;;AAQlB,YAAQ,EAAE,kBAAU,EAAE,EAAE;AACpB,YAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,UAAO,EAAE,eAAW,CAAC;;AAEpD,eAAO,uBAAW,MAAM,CAAC,WAAW,CAAC,CAAC;KACzC;;;;;;;;AAQD,cAAU,EAAE,oBAAU,EAAE,EAAE;AACtB,YAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,UAAO,EAAE,iBAAa,CAAC;;AAEtD,eAAO,uBAAW,MAAM,CAAC,WAAW,CAAC,CAAC;KACzC;CACJ,CACJ,CAAC;;;;AAEK,SAAS,IAAI,CAAE,EAAE,EAAE;;AAEtB,WAAO;;;;;;;AAOH,gBAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;;;;;;;AAOxC,kBAAU,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;;KAE/C,CAAC;CACL","file":"tasks.js","sourcesContent":["import requestFns from './functions';\nimport crud from './crud';\n\nexport const tasks = Object.assign(\n    Object.create(crud),\n    {\n        basePath: '/tasks',\n\n        /**\n         * Fetch tasks for a specific company\n         *\n         * @param  {Integer} id Company ID to fetch tasks for\n         * @return {Promise}    Bluebird promise, see TW API docs for success JSON\n         */\n        complete: function (id) {\n            let requestPath = this.basePath + `/${id}/complete`;\n\n            return requestFns.update(requestPath);\n        },\n\n        /**\n         * Fetch tasks for a specific company\n         *\n         * @param  {Integer} id Company ID to fetch tasks for\n         * @return {Promise}    Bluebird promise, see TW API docs for success JSON\n         */\n        uncomplete: function (id) {\n            let requestPath = this.basePath + `/${id}/uncomplete`;\n\n            return requestFns.update(requestPath);\n        }\n    }\n);\n\nexport function task (id) {\n\n    return {\n\n        /**\n         * Star a project\n         *\n         * @return {Promise}\n         */\n        complete: tasks.complete.bind(tasks, id),\n\n        /**\n         * Uncomplete a project\n         *\n         * @return {Promise}\n         */\n        uncomplete: tasks.uncomplete.bind(tasks, id)\n\n    };\n}\n"]}